[{"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/index.js":"1","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/App.js":"2","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/edit.js":"3","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/recordList.js":"4","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateDay.js":"5","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateWeek.js":"6","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateMonth.js":"7","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/create.js":"8","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/navbar.js":"9","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateSchedule.js":"10"},{"size":324,"mtime":1706596633401,"results":"11","hashOfConfig":"12"},{"size":1028,"mtime":1702333145969,"results":"13","hashOfConfig":"12"},{"size":6119,"mtime":1702333145970,"results":"14","hashOfConfig":"12"},{"size":2366,"mtime":1702333145970,"results":"15","hashOfConfig":"12"},{"size":3255,"mtime":1706601059459,"results":"16","hashOfConfig":"12"},{"size":3081,"mtime":1702333145970,"results":"17","hashOfConfig":"12"},{"size":1145,"mtime":1702333145970,"results":"18","hashOfConfig":"12"},{"size":5788,"mtime":1706598394082,"results":"19","hashOfConfig":"12"},{"size":1470,"mtime":1702333145970,"results":"20","hashOfConfig":"12"},{"size":792,"mtime":1702333145970,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2448gg",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/index.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/App.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/edit.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/recordList.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateDay.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateWeek.js",["54"],[],"import React, { useState, useEffect } from \"react\";\nimport './WeeklySchedule.css'; // Import a CSS file for styling\n\n\nconst weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n\n// today's date\nconst today = new Date();\n// check db's dates\n// if db has schedule for today, display it\n// else, display default schedule\n\n\n\n\nexport default function WeeklySchedule() {\n    const initialSchedule = {\n        Monday: [],\n        Tuesday: [],\n        Wednesday: [],\n        Thursday: [],\n        Friday: [],\n    };\n    \n    const [records, setRecords] = useState([]);\n    useEffect(() => {\n        async function getRecords() {\n            const response = await fetch(`http://localhost:3000/record/`);\n            if (!response.ok) {\n                const message = `An error occurred: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n            const records = await response.json();\n            setRecords(records);\n        }\n        getRecords();\n        return;\n\n    }, [records.length]);\n\n\n\n    const [schedule, setSchedule] = useState(initialSchedule);\n\n\n    const handleTaskChange = (day, index, task) => {\n        const updatedSchedule = { ...schedule };\n        updatedSchedule[day][index] = task;\n        setSchedule(updatedSchedule);\n    };\n\n\n    return (\n        <div className=\"weekly-schedule-container\">\n            <h1 className=\"weekly-schedule-header\" >Weekly Schedule</h1>\n            <table className=\"weekly-schedule\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        {weekdays.map((day) => (\n                            <th key={day}>{day}</th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {Array.from({ length: 9 }).map((_, index) => (\n                        <tr key={index}>\n                            <td className={index % 2 === 0 ? 'task-cell' : 'break-cell'}>\n                                {index % 2 === 0 ? 'Tasks' : 'Break'}\n                            </td>\n                            {weekdays.map((day) => (\n                                <td key={day}>\n                                    <TaskInput\n                                        day={day}\n                                        index={index}\n                                        task={schedule[day][index] || ''}\n                                        onTaskChange={handleTaskChange}\n                                    />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nfunction TaskInput({ day, index, task, onTaskChange }) {\n    const handleChange = (e) => {\n        onTaskChange(day, index, e.target.value);\n    };\n\n\n    return (\n        <input\n            className=\"task-input\"\n            type=\"text\"\n            value={task}\n            onChange={handleChange}\n            placeholder=\"Enter task\"\n        />\n    );\n}\n","/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateMonth.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/create.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/navbar.js",[],[],"/Users/kimdo/Documents/Projects/CheesePlanner.io/client/src/components/generateSchedule.js",["55","56","57","58","59"],[],"import React, { useEffect, useState } from \"react\";\nimport addDays from \"date-fns/addDays\";\nexport function spacedRepetitionDate(record){\n\n    var duedate = new Date(record.deadline);\n    var today = new Date();\n    var remaining = duedate - today;\n    //2n^3+3n^2+n-6r=0 find n when r = remaining\n    var n = 0;\n    var r = remaining;\n    for (var i = 0; i < 1000; i++){\n        if (2*Math.pow(n,3)+3*Math.pow(n,2)+n-6*r >= 0){\n            break;\n        }\n        n++;\n    }\n    //get all squared number from 1 to n\n    var squared = [];\n    for (var i = 1; i <= n; i++){\n        squared.push(Math.pow(i,2)-1);\n    }\n    //get all dates from today + 1 to today + n\n    var dates = [];\n    for (var i = 1; i <= n; i++){\n        dates.push(addDays(squared[i], i));\n    }\n    return dates;\n}\n\n",{"ruleId":"60","severity":1,"message":"61","line":8,"column":7,"nodeType":"62","messageId":"63","endLine":8,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":13},{"ruleId":"60","severity":1,"message":"65","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"66","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"68","line":19,"column":14,"nodeType":"62","messageId":"69","endLine":19,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":24,"column":14,"nodeType":"62","messageId":"69","endLine":24,"endColumn":15},"no-unused-vars","'today' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-redeclare","'i' is already defined.","redeclared"]